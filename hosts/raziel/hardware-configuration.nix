# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.initrd.luks.devices."luks-8b57d86d-a385-48d2-b393-ba1cc1e9fdd0".device = "/dev/disk/by-uuid/8b57d86d-a385-48d2-b393-ba1cc1e9fdd0";
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/99bb2066-640d-4bf5-a801-531f352b0f19";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-474039b7-cc35-4d20-aa3b-ebe52fc3c4b8".device = "/dev/disk/by-uuid/474039b7-cc35-4d20-aa3b-ebe52fc3c4b8";

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/3A3E-6EC3";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/956e499a-3625-4a78-9eca-0c0dd1c5d396"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
